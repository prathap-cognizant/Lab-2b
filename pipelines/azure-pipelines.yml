trigger:
  branches:
    include:
      - main

variables:
  imageName: 'claim-status-api'
  acrName: 'prathapacr'
  resourceGroup: 'prathapRG'
  containerAppName: 'claim-status-app'
  apimName: 'claim-status-apim'
  location: 'eastus'

stages:
# -------------------
# 1. Build Stage
# -------------------
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    pool:
      name: Default
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Build and Push to ACR
      inputs:
        containerRegistry: 'acr-service-connection'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: 'pipelines/src/Dockerfile'
        tags: |
          $(Build.BuildId)

# -------------------
# 2. Security Scan Stage
# -------------------
- stage: SecurityScan
  displayName: Security Scan
  dependsOn: Build
  jobs:
  - job: Scan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # Option 1: Defender for Containers (auto-scan after push)
    - script: |
        echo "Defender for Containers will auto-scan the image in ACR."
      displayName: "Info: Defender for Containers enabled"

    # Option 2: Fail pipeline on critical/high vulnerabilities using Trivy
    - script: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        ./trivy image --exit-code 1 --severity CRITICAL,HIGH $(acrName).azurecr.io/$(imageName):$(Build.BuildId)
      displayName: "Run Trivy Scan"

# -------------------
# 3. Deploy Stage
# -------------------
- stage: Deploy
  displayName: Deploy ACA and APIM using Bicep
  dependsOn: SecurityScan
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'genai-devops-svc-ch-1'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az group create --name $(resourceGroup) --location $(location)
          az deployment group create             --resource-group $(resourceGroup)             --template-file pipelines/infra/main.bicep             --parameters containerAppName=$(containerAppName)                          containerImage=$(acrName).azurecr.io/$(imageName):$(Build.BuildId)                          acrName=$(acrName)                          apimName=$(apimName)

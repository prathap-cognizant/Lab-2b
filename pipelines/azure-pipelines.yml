
trigger:
  branches:
    include:
      - main

variables:
  imageName: 'claim-status-api'
  acrName: 'prathapacr'
  resourceGroup: 'prathapRG'
  containerAppName: 'claim-status-app'
  apimName: 'claim-status-apim'
  location: 'eastus'

stages:
# -------------------
# 1. Build Stage
# -------------------
- stage: Build
  displayName: Build and Push using az acr build
  jobs:
  - job: Build
    pool:
      name: Default
    steps:
    - checkout: self

    - task: AzureCLI@2
      displayName: Build Docker Image in ACR
      inputs:
        azureSubscription: 'genai-devops-svc-ch-1'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr build --registry $(acrName) --image $(imageName):$(Build.BuildId) src/

# -------------------
# 2. Security Scan Stage
# -------------------
- stage: SecurityScan
  displayName: Security Scan with Snyk
  dependsOn: Build
  jobs:
  - job: Scan
    pool:
      name: Default
    steps:
    - task: SnykSecurityScan@1
      displayName: "Snyk Container Scan"
      inputs:
        serviceConnectionEndpoint: 'Snyk-Service-Connection'
        testType: 'container'
        dockerImageName: '$(acrName).azurecr.io/$(imageName):$(Build.BuildId)'
        severityThreshold: 'high'
        monitorWhen: 'always'
      env:
        SNYK_DISABLE_SSL: 'true'

# -------------------
# 3. Deploy Stage
# -------------------
- stage: Deploy
  displayName: Deploy ACA and Expose API in APIM
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      name: Default
    steps:
    # Deploy Container App
    - task: AzureCLI@2
      displayName: Deploy Container App
      inputs:
        azureSubscription: 'genai-devops-svc-ch-1'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Update or create Container App
          az containerapp update `
            --name $(containerAppName) `
            --resource-group $(resourceGroup) `
            --image $(acrName).azurecr.io/$(imageName):$(Build.BuildId) `
            --cpu 0.5 `
            --memory 1.0Gi

          # Get Container App FQDN
          $appUrl = az containerapp show `
            --name $(containerAppName) `
            --resource-group $(resourceGroup) `
            --query properties.configuration.ingress.fqdn `
            --output tsv
          Write-Host "Container App URL: $appUrl"

          # Save URL for next step
          echo "##vso[task.setvariable variable=containerAppUrl]https://$appUrl"

    # Import API into APIM
    - task: AzureCLI@2
      displayName: Import API into APIM
      inputs:
        azureSubscription: 'genai-devops-svc-ch-1'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az apim api import `
            --resource-group $(resourceGroup) `
            --service-name $(apimName) `
            --path claim-status `
            --api-id claim-status-api `
            --specification-format OpenApi `
            --specification-path src/openapi.yaml `
            --service-url $(containerAppUrl)

trigger:
  branches:
    include:
      - main

variables:
  imageName: 'claim-status-api'
  acrName: 'prathapacr'
  resourceGroup: 'prathapRG'
  containerAppName: 'claim-status-app'
  apimName: 'claim-status-apim'
  location: 'eastus'

stages:
# -------------------
# 1. Build Stage
# -------------------
- stage: Build
  displayName: Build and Push using az acr build
  jobs:
  - job: Build
    pool:
      name: Default
    steps:
    - checkout: self

    - task: AzureCLI@2
      displayName: Build Docker Image in ACR
      inputs:
        azureSubscription: 'genai-devops-svc-ch-1'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr build --registry $(acrName) --image $(imageName):$(Build.BuildId) src/

# -------------------
# 2. Security Scan Stage
# -------------------
- stage: SecurityScan
  displayName: Security Scan with Snyk
  dependsOn: Build
  jobs:
  - job: Scan
    pool:
      name: Default
    steps:
    - task: SnykSecurityScan@1
      displayName: "Snyk Container Scan"
      inputs:
        serviceConnectionEndpoint: 'Snyk-Service-Connection'
        testType: 'container'
        dockerImageName: '$(acrName).azurecr.io/$(imageName):$(Build.BuildId)'
        severityThreshold: 'high'
        monitorWhen: 'always'
      env:
        SNYK_DISABLE_SSL: 'true'

# -------------------
# 3. Deploy Stage
# -------------------
- stage: Deploy
  displayName: Deploy ACA and APIM using Bicep
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      name: Default
    steps:
    - task: AzureCLI@2
      displayName: "Deploy API to APIM"
      inputs:
        azureSubscription: 'genai-devops-svc-ch-1'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Example: Import OpenAPI spec or configure API in APIM
          # Replace with actual deployment logic
          az apim api import --resource-group $(resourceGroup) `
                             --service-name $(apimName) `
                             --path claim-status `
                             --api-id claim-status-api `
                             --specification-format OpenApi `
                             --specification-path src/openapi.yaml `
                             --display-name "Claim Status API"
